package com.softserve.edu.manager;

import java.util.Date;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.softserve.edu.dao.AchievementDao;
import com.softserve.edu.dao.AchievementTypeDao;
import com.softserve.edu.dao.UserDao;
import com.softserve.edu.entity.Achievement;
import com.softserve.edu.entity.AchievementType;
import com.softserve.edu.entity.User;
import com.softserve.edu.exception.InvalidValueException;
import com.softserve.edu.util.AngryThrower;

@Service("achievementManager")
public class AchievementManagerImplementation implements AchievementManager {

	@Autowired
	AchievementTypeDao achievementTypeDao;
	@Autowired
	UserDao userDao;
	@Autowired
	AchievementDao achievementDao;

	/**
	 * {@inheritDoc}
	 */
	public void giveAwardToUser(final long userId,
			final long achievementTypeId, final String comment) {

		AchievementType achievementType = achievementTypeDao
				.getByID(achievementTypeId);
		AngryThrower.ifNull(achievementType, "No such achievement type id.");

		User user = userDao.getByID(userId);
		AngryThrower.ifNull(user, "User with such id does not exist.");

		Achievement achievement = new Achievement();
		achievement.setComment(comment);
		achievement.setAchievementType(achievementType);
		achievement.setUser(user);
		achievement.setCreated(new Date());

		achievementDao.save(achievement);
	}

	/**
	 * {@inheritDoc}
	 */
	public boolean takeAwardBackFromUser(final long achId)
			throws InvalidValueException {

		Achievement achievement = achievementDao.getByID(achId);

		if (achievement == null) {
			throw new InvalidValueException("No achievement was found.");
		}

		return achievementDao.delete(achievement);
	}
}
