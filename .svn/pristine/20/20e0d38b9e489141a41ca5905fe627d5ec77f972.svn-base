package com.softserve.edu.dao;

import java.util.ArrayList;
import java.util.List;
import java.util.Set;

import org.hibernate.Query;
import org.hibernate.Session;
import org.springframework.stereotype.Repository;

import com.softserve.edu.entity.AchievementType;
import com.softserve.edu.entity.Competence;
import com.softserve.edu.entity.Group;
import com.softserve.edu.entity.User;
import com.softserve.edu.util.HibernateHelper;
@Repository("competenceDao")
public class CompetenceDaoImplementation extends
		GenericDaoImplementation<Competence> implements CompetenceDao {

	public CompetenceDaoImplementation() {
		super(Competence.class);
	}

	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	public List<Group> showGroups(int groupId) {
		Session session = HibernateHelper.getSessionFactory().openSession();
		Query query = session
				.createQuery("from Group where competence_id = :id");
		query.setParameter("id", groupId);
		List<Group> groups = query.list();
		session.close();
		return groups;
	}

	public void create(String name) {

	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Competence findByName(String name) {
		Session session = HibernateHelper.getSessionFactory().openSession();

		Competence competence = (Competence) session
				.createQuery("from Competence where name like :name")
				.setParameter("name", name).uniqueResult();
		session.close();

		return competence;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<Competence> findByUser(Long userId) {
		Session session = HibernateHelper.getSessionFactory().openSession();

		User user = (User) session.get(User.class, userId);
		List<Competence> list = new ArrayList<>(user.getCompetences());

		session.close();
		return list;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<Competence> listWithUsers() {
		Session session = HibernateHelper.getSessionFactory().openSession();

		List<Competence> list = session.createQuery("from Competence").list();
		for (Competence competence : list) {
			competence.getUsers().size();
		}

		session.close();
		return list;
	}
}
