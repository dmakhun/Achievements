package com.softserve.edu.dao;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.NoResultException;
import javax.persistence.Query;

import org.springframework.stereotype.Repository;

import com.softserve.edu.entity.Competence;
import com.softserve.edu.entity.Group;
import com.softserve.edu.entity.User;

@Repository("competenceDao")
public class CompetenceDaoImplementation extends
		GenericDaoImplementation<Competence> implements CompetenceDao {

	public CompetenceDaoImplementation() {
		super(Competence.class);
	}

	/**
	 * {@inheritDoc}
	 */
	@SuppressWarnings("unchecked")
	public List<Group> showGroups(int groupId) {

		Query query = entityManager
				.createQuery("from Group where competence_id = :id");
		query.setParameter("id", groupId);
		List<Group> groups = query.getResultList();

		return groups;
	}

	public void create(String name) {

	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Competence findByName(String name) {

		try {
			Competence competence = (Competence) entityManager
					.createQuery("from Competence where name like :name")
					.setParameter("name", name).getSingleResult();

			return competence;
		} catch (NoResultException e) {
			return null;
		}
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<Competence> findByUser(Long userId) {

		User user = (User) entityManager.find(User.class, userId);
		List<Competence> list = new ArrayList<>(user.getCompetences());

		return list;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<Competence> listWithUsers() {

		List<Competence> list = entityManager.createQuery("from Competence")
				.getResultList();
		for (Competence competence : list) {
			competence.getUsers().size();
		}

		return list;
	}
}
