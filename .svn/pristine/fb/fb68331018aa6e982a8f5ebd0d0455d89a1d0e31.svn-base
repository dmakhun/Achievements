package com.softserve.edu.manager;

import static org.junit.Assert.*;

import javax.persistence.EntityManager;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.runners.MockitoJUnitRunner;

import com.softserve.edu.dao.AchievementTypeDao;
import com.softserve.edu.dao.CompetenceDao;
import com.softserve.edu.dao.CompetenceDaoImplementation;
import com.softserve.edu.dao.GenericDao;
import com.softserve.edu.dao.GenericDaoImplementation;
import com.softserve.edu.dao.UserDao;
import com.softserve.edu.entity.Achievement;
import com.softserve.edu.entity.AchievementType;
import com.softserve.edu.entity.Competence;

@RunWith(MockitoJUnitRunner.class)
public class AchievementTypeManagerImplTest {

//	@Mock
//	private CompetenceDao competenceDao;
	@Mock
	private AchievementTypeDao achievementTypeDao;
//	@Mock
//	private GenericDao<Competence> genericDao;
	@Mock
	private UserDao userDao;
	@Mock
	private EntityManager entityManager;

	@InjectMocks
	private GenericDao<Competence> genericDao = new GenericDaoImplementation<Competence>();
//	@InjectMocks
//	private CompetenceDao competenceDao = new CompetenceDaoImplementation();

	// @InjectMocks
	// private AchievementTypeManager achievementTypeManager = new AchievementTypeManagerImplementation();

	@Before
	public void setUp() throws Exception {
	}

	@Test
	public void testCreate() {
//		AchievementType achievementTypeExpected = new AchievementType().setName("Java")
//				.setPoints(78).setCompetence(competenceDao.getByID(1L));
		assertNotNull(genericDao.getByID(1l));
		//AchievementType achievementTypeActual = achievementTypeManager.create("Java", 78, 1l);
//		assertEquals("failure - strings are not equal", achievementTypeExpected, achievementTypeActual);
	}

	@Test
	public void testDeleteById() {
		fail("Not yet implemented");
	}

	@Test
	public void testAchievementTypeList() {
		fail("Not yet implemented");
	}

	@Test
	public void testList() {
		fail("Not yet implemented");
	}

}
