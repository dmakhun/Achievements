package com.softserve.edu.manager;

import java.util.Date;
import java.util.List;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.softserve.edu.dao.AchievementDao;
import com.softserve.edu.dao.AchievementTypeDao;
import com.softserve.edu.dao.UserDao;
import com.softserve.edu.entity.Achievement;
import com.softserve.edu.entity.AchievementType;
import com.softserve.edu.entity.User;
import com.softserve.edu.exception.CompetenceManagerException;
import com.softserve.edu.util.AngryThrower;

@Service("achievementManager")
public class AchievementManagerImplementation implements AchievementManager {

	@Autowired
	AchievementTypeDao achievementTypeDao;
	@Autowired
	UserDao userDao;
	@Autowired
	AchievementDao achievementDao;

	private static final Logger LOGGER = Logger
			.getLogger(AchievementManagerImplementation.class);
	
	@Override
	@Transactional
	public void giveAwardToUser(final long userId,
			final long achievementTypeId, final String comment) throws CompetenceManagerException {

		AchievementType achievementType = achievementTypeDao
				.findById(achievementTypeId);
		AngryThrower.ifNull(achievementType, "No such achievement type id.");

		User user = userDao.findById(userId);
		AngryThrower.ifNull(user, "User with such id does not exist.");

		Achievement achievement = new Achievement();
		achievement.setComment(comment);
		achievement.setAchievementType(achievementType);
		achievement.setUser(user);
		achievement.setCreated(new Date());
		try {
			achievementDao.save(achievement);
		} catch (Exception e) {
			LOGGER.error("Could not create achievement", e);
			throw new CompetenceManagerException("Could not create achievement", e);
		}
	}

	@Override
	@Transactional
	public List<Achievement> userAchievements(Long userId) {
		return achievementDao.userAchievements(userId);
	}

	@Override
	@Transactional
	public List<Achievement> getAchievementsByUserUuid(String userUuid) {
		return achievementDao.getAchievementsByUserUuid(userUuid);
	}

}
